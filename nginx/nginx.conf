worker_processes auto;
worker_rlimit_nofile 204800;

error_log /var/log/nginx/error.log debug;
events {
  worker_connections 8192;
  multi_accept on;
  use epoll;

  accept_mutex on;
}

http {
  # Nginx will handle gzip compression of responses from the app server
  access_log  /var/log/nginx/access.log  main_ext;
  log_format  main_ext  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for" '
                      '"$host" sn="$server_name" '
                      'rt=$request_time '
                      'ua="$upstream_addr" us="$upstream_status" '
                      'ut="$upstream_response_time" ul="$upstream_response_length" '
                      'cs=$upstream_cache_status' ;
  gzip on;
  gzip_proxied any;
  gzip_types text/plain application/json;
  gzip_min_length 1000;

  fastcgi_buffers 8 16k;
  fastcgi_buffer_size 32k;
  fastcgi_connect_timeout 300;
  fastcgi_send_timeout 300;
  fastcgi_read_timeout 300;

  server {
    listen 80;
    server_name localhost;

    location /nginx_status {
            stub_status on;
            access_log off;
            allow all;
    }
    # Nginx will reject anything not matching /api
    location / {
      # Reject requests with unsupported HTTP method
      if ($request_method !~ ^(GET|POST|HEAD|OPTIONS|PUT|DELETE)$) {
        return 405;
      }

      # Only requests matching the whitelist expectations will
      # get sent to the application server
      proxy_pass http://localhost:3000;
      proxy_redirect     off;
      proxy_http_version 1.1;
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection 'upgrade';
      proxy_set_header Host $host;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_cache_bypass $http_upgrade;
    }

    location = /dashboard.html {
            root   /usr/share/nginx/html;
    }
  }
}